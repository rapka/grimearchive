extends layout

block content

	.upload.content
		.upload-title.blue
			p Upload to Grime Archive
		.upload-text
			p * No fields are required, but please fill out as many as possible.
			p * Don't enter duplicate info (MCs, station, etc) in the title field.
			p * Only MP3 files are supported.
			p * Tags are automatically updated with mix information.
			p * Follow the&nbsp;
				a(href='/about/') rules
				| !

		div.upload-inputs
			form(id="_form", name="upload", action="/upload", method="post", enctype='multipart/form-data')
				div.labels-overlay
				div.upload-label
					| Title (if necessary)
				input(type="text", name="title")
				div.upload-label
					| DJ
				input(type="text", name="dj")
				br
				div.upload-label.tag-input
					| MCs
				input(type="text", name="mcs" id="mcs")
				div.upload-label.tag-input
					| Crews
				input(type="text", name="crews" id="crews")
				div.upload-label
					| Radio Station / Rave
				input(type="text", name="station")
				br
				div.upload-label
					| Air Date
				input(type="text", name="day" placeholder="day" class="date")
				input(type="text", name="month" placeholder="month" class="date")
				input(type="text", name="year" placeholder="year" class="date")
				br
				div.upload-label
					| YouTube URL (optional)
				input(type="text", name="youtube" placeholder="https://www.youtube.com" class="youtube")
				div.upload-divider
				div.upload-label
					| Username
				input(type="text", name="username")
				div.upload-label
					| Tripcode&nbsp;
					div.tripcode-tooltip.tooltip-button
						| (?)
				input(type="text", name="tripcode")

				div.tooltip.tripcode-tooltip-text
					br
					| Grime Archive uploaders are anonymous, but if you want any mixes you upload to be identifiable,
					| you can provide a name and tripcode that will be used to identify you.
					| Tripcodes are passwords that get encrypted and displayed as a unique series of emojis next to your name.
				br
				div.upload-label
					| Additional comments
				textarea(name="description" cols="40" rows="5")
				br
				div.upload-divider
				div.upload-label
					| MP3 Options
				div.option-container
					div.mp3-option
						| Preserve embedded art?
					div.squaredOne
						input(type="checkbox" value="None" id="squaredOne" name="preserve")
						label(for="squaredOne")
					div.preserve-tooltip.tooltip-button
						|   (?)
					div.tooltip.preserve-tooltip-text
						br
						| If checked, album art embedded in your file will be kept after uploading, otherwise a standard image will be used.
						| Note that only PNG and JPEG images will be kept.
				br
				div.option-container
					div.mp3-option
						| Use title as album title?
					div.squaredOne
						input(type="checkbox" value="None" id="squaredOne2" name="albumtitle")
						label(for="squaredOne2")
					div.album-tooltip.tooltip-button
						|   (?)
					div.tooltip.album-tooltip-text
						br
						| If checked, the title of the mix will also be used as the tag for the album title,
						| otherwise the title 'Grime Archive' will be used.

				.file-inputs
					input(type="file", name="mixUpload" id='_file' accept='audio/mpeg3,audio/mpeg,audio/mp3')
					.file-overlay
						p.file-button Select a File
				input(type='button',  onclick="submitFile()", value='Upload', id='_submit')
				input(type='button', value='Cancel', id='_cancel')
				script(src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js')
				script(src="/js/jquery.tagsinput.js")
				link(rel="stylesheet" type="text/css" href="style/jquery.tagsinput.css")
				script(type='text/javascript').
					function upload(fd) {
						var xhr = new XMLHttpRequest();
						xhr.upload.addEventListener("progress", function (evt) {
								if (evt.lengthComputable) {
									var percentage = Math.floor((evt.loaded / evt.total) * 100);
									$('#_submit').prop('value', 'Uploading...' + percentage + '%');
								}
							}, false);
						xhr.onreadystatechange = function() {
							var result;

							if (xhr.readyState == 4) {
								var split = xhr.responseText.split("/")[2];
								var tries = 0;
								var interval = setInterval(function() {
									if (tries % 4 === 0) {
										$('#_submit').prop('value', 'Processing');
									} else if (tries % 4 === 1) {
										$('#_submit').prop('value', 'Processing.');
									} else if (tries % 4 === 2) {
										$('#_submit').prop('value', 'Processing..');
									} else {
										$('#_submit').prop('value', 'Processing...');
									}

									$('#_cancel').removeClass('visible');
									$.get("upload/" + split, function (data) {
										if (parseInt(data) > 0) {
												window.location = xhr.responseText;
										}
										else {
												tries++;
										}
										if (tries >= 100) {
											$('#_submit').prop('value', 'Error uploading mix :( Please refresh');
											clearInterval(interval);
										}
									});
								}, 2000);
							}
						};
						xhr.open('post', '/upload', true);

						xhr.send(fd);

						return xhr;
					}

					function submitFile() {
						var form = document.getElementById('_form');
						var fd = new FormData(form);
						var file = document.getElementById('_file');

						var acceptedTypes = ['mp3'];
						var filename = document.getElementById('_file').value;
						var day = $('input[name="day"]')[0].value;
						var month = $('input[name="month"]')[0].value;
						var year = $('input[name="year"]')[0].value;
						var youtube = $('input[name="youtube"]')[0].value;

						// Check for non-numeric date entries
						if ((day != '' && isNaN(parseInt(day))) || (month != '' && isNaN(parseInt(month))) || (year != '' && isNaN(parseInt(year)))) {
							$('#_submit').prop('value', 'Invalid date');
						}
						// Check for date values <= 0
						else if ((day != '' && parseInt(day) < 1) || (month != '' && parseInt(month) < 1) || (year != '' && parseInt(year) < 1)) {
							$('#_submit').prop('value', 'Invalid date');
						}
						// Check for nonsensical date values
						else if ((day != '' && parseInt(day) > 31) || (month != '' && parseInt(month) > 12) || (year != '' && parseInt(year) < 1900) || (year != '' && parseInt(year) > 3000)) {
							$('#_submit').prop('value', 'Invalid date');
						}
						else if (document.getElementById('_file').value == ''){
							$('#_submit').prop('value', 'No file selected');
						}
						else if (acceptedTypes.indexOf(filename.match(/\.([^\.]+)$/)[1].toLowerCase()) == -1 ) {
							$('#_submit').prop('value', 'Invalid file type');
						}
						else if (youtube && !youtube.match(/^(https?\:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/(.+$)/)) {
							$('#_submit').prop('value', 'Invalid YouTube URL');
						}

						else {
							$('#_submit').addClass('progress');
							$('.labels-overlay').addClass('visible');
							$('#_submit').prop('value', 'Uploading...');
							document.getElementById('_submit').onclick = null;
							var xhr = upload(fd);

							setTimeout (function () {
								$('#_cancel').addClass('visible');
								document.getElementById('_cancel').addEventListener('click', function() {
									$('#_submit').slideDown();
									$('.labels-overlay').removeClass('visible');
									$('#_cancel').removeClass('visible');
									document.getElementById('_submit').onclick = submitFile;
									$('#_submit').removeClass('progress');
									$('#_submit').prop('value', 'Upload');

									xhr.abort();
								});
							}, 350);
						}
					}

					$("input[type=file]").on('change',function(){
						$(".file-button").text(this.files[0].name);
					});

					$('.tripcode-tooltip').click(function() {
						$( ".tripcode-tooltip-text" ).toggle();
					})

					$('.preserve-tooltip').click(function() {
						$( ".preserve-tooltip-text" ).toggle();
					})

					$('.album-tooltip').click(function() {
						$( ".album-tooltip-text" ).toggle();
					})

					$('#mcs').tagsInput({
						 'defaultText':'',
						 'height':'20px',
						 'width':'506px'
						});

					$('#crews').tagsInput({
						 'defaultText':'',
						 'height':'20px',
						 'width':'506px'
						});